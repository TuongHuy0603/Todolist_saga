{"version":3,"sources":["pages/Todolist/bg.png","components/GlobalSetting/LoadingComponent/LoadingComponent.module.css","assets/imgLoading/loading.gif","pages/BaiTapToDoListSaga/bg.png","components/GlobalSetting/LoadingComponent/LoadingComponent.js","components/Home/Header/Header.js","pages/About/About.js","pages/BaiTapToDoListSaga/BaiTapToDoListSaga.js","redux/constants/ToDoListConst.js","pages/Contact/Contact.js","pages/Detail/Detail.js","pages/Home/Home.js","pages/Login/Login.js","pages/PageNotFound/PageNotFound.js","pages/Profile/Profile.js","pages/Todolist/Todolist.js","redux/actions/ToDoListAction.js","pages/Todolist/ToDoListRedux.js","pages/Todolist/TodolistRFC.js","App.js","serviceWorker.js","redux/reducers/ToDoListReducer.js","redux/reducers/LoadingReducer.js","util/constants/settingSystem.js","services/ToDoListService.js","redux/sagas/ToDoListSaga.js","redux/constants/LoadingConst.js","redux/sagas/rootSaga.js","redux/configStore.js","index.js"],"names":["module","exports","LoadingComponent","useSelector","state","LoadingReducer","isLoading","className","styleLoading","bgLoading","src","require","Header","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","activeClassName","activeStyle","fontWeight","href","aria-haspopup","aria-labelledby","placeholder","About","BaiTapToDoListSaga","props","dispatch","useDispatch","taskList","ToDoListReducer","useState","values","taskName","errors","setState","addTask","e","preventDefault","useEffect","delTask","console","log","onClick","onSubmit","name","onChange","target","value","newValues","newErrors","test","trim","filter","item","status","map","index","key","Contact","Detail","match","params","path","Home","Login","userName","passWord","userLogin","setUserLogin","handleChange","event","newUserLogin","valid","history","goBack","localStorage","setItem","JSON","stringify","alert","when","message","location","PageNotFound","url","Profile","getItem","Todolist","getTaskList","promise","Axios","method","then","result","data","catch","err","response","renderTaskToDo","checkTask","renderTaskToDoDone","rejectTask","res","this","Component","getTaskListApi","a","ToDoListRedux","rejectTaskApi","checkTaskApi","deleteTaskApi","TodolistRFC","App","exact","component","Boolean","window","hostname","initialState","DOMAIN","STATUS_CODE","toDoListService","getTaskApi","addTaskApi","checkDoneTask","getTaskApiAction","theoDoiActionGetTaskApi","addTaskApiAction","theoDoiActionAddTaskApi","theoDoiActionDeleteTask","checkDoneTaskApi","theoDoiDoneTask","theoDoiRejectTask","action","put","call","delay","takeLatest","rootSaga","all","ToDoListSaga","middleWareSaga","createMiddleWareSaga","rootReducer","combineReducers","store","createStore","applyMiddleware","reduxThunk","run","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.bac2a64f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.9b2b410b.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bgLoading\":\"LoadingComponent_bgLoading__2z63x\"};","module.exports = __webpack_public_path__ + \"static/media/loading.504b535c.gif\";","module.exports = __webpack_public_path__ + \"static/media/bg.9b2b410b.png\";","import React from 'react'\nimport styleLoading from './LoadingComponent.module.css';\nimport { useSelector } from 'react-redux'\n\nexport default function LoadingComponent() {\n\n    const { isLoading } = useSelector(state => state.LoadingReducer)\n\n    if (isLoading) {\n        return (\n            <div className={styleLoading.bgLoading}>\n                <img src={require('../../../assets/imgLoading/loading.gif')} />\n            </div>\n        )\n    } else {\n        return ''\n    }\n}\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport './Header.css'\nexport default function Header() {\n\n\n    return (\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n            <NavLink className=\"navbar-brand\" to=\"/\">Cyberlearn</NavLink>\n            <button className=\"navbar-toggler d-lg-none\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavId\" aria-controls=\"collapsibleNavId\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" />\n            <div className=\"collapse navbar-collapse\" id=\"collapsibleNavId\">\n                <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n                    <li className=\"nav-item\">\n                        <NavLink activeClassName=\"activeNavItem\" activeStyle={{ fontWeight: 'bold' }} className=\"nav-link\" to=\"/home\">Home </NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        <NavLink activeClassName=\"activeNavItem\" activeStyle={{ fontWeight: 'bold' }} className=\"nav-link\" to=\"/about\">About</NavLink>\n                    </li>\n                    <li className=\"nav-item dropdown\">\n                        <NavLink activeClassName=\"activeNavItem\" activeStyle={{ fontWeight: 'bold' }} className=\"nav-link\" to=\"/contact\">Contact</NavLink>\n                    </li>\n                    <li className=\"nav-item dropdown\">\n                        <NavLink activeClassName=\"activeNavItem\" activeStyle={{ fontWeight: 'bold' }} className=\"nav-link\" to=\"/login\">Login</NavLink>\n                    </li>\n                    <li className=\"nav-item dropdown\">\n                        <NavLink activeClassName=\"activeNavItem\" activeStyle={{ fontWeight: 'bold' }} className=\"nav-link\" to=\"/profile\">profile</NavLink>\n                    </li>\n                   \n                    <li className=\"nav-item dropdown\">\n                        <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"dropdownId\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Bài tập</a>\n                        <div className=\"dropdown-menu\" aria-labelledby=\"dropdownId\">\n                            <NavLink className=\"dropdown-item\" to=\"/todolistrfc\">To do list rfc</NavLink>\n                            <NavLink className=\"dropdown-item\" to=\"/todolistrcc\">To do list rcc</NavLink>\n                            <NavLink className=\"dropdown-item\" to=\"/todolistredux\">To do list redux</NavLink>\n                            <NavLink className=\"dropdown-item\" to=\"/todolistsaga\">To do list saga</NavLink>\n\n                            \n                        </div>\n                    </li>\n\n                </ul>\n                <form className=\"form-inline my-2 my-lg-0\">\n                    <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\" />\n                    <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n                </form>\n            </div>\n        </nav>\n\n    )\n}\n\n\n\n","import React from 'react'\n\nexport default function About() {\n    return (\n        <div>\n            About\n        </div>\n    )\n}\n","import Axios from 'axios';\nimport React, { useEffect, useState } from 'react'\n\nimport {useDispatch,useSelector} from 'react-redux';\nimport { ADD_TASK_API, CHECK_TASK_API, DELETE_TASK_API, GET_TASKLIST_API, REJECT_TASK_API } from '../../redux/constants/ToDoListConst';\n\n\nexport default function BaiTapToDoListSaga(props) {\n\n    const dispatch = useDispatch(); \n    const {taskList} = useSelector(state => state.ToDoListReducer)\n\n\n    let [state, setState] = useState({\n        taskList: [],\n        values: {\n            taskName: ''\n        },\n        errors: {\n            taskName: ''\n        }\n    });\n\n    const handleChange = (e) => {\n        let { value, name } = e.target;\n        let newValues = { ...state.values };\n\n        newValues = { ...newValues, [name]: value };\n\n        let newErrors = { ...state.errors };\n\n        let regexString = /^[a-z A-Z]+$/;\n\n        if (!regexString.test(value) || value.trim() === '') {\n            newErrors[name] = name + ' invalid !';\n        } else {\n            newErrors[name] = '';\n        }\n\n\n        setState({\n            ...state,\n            values: newValues,\n            errors: newErrors\n        })\n    }\n\n\n    const getTaskList = () => {\n        //Dispatch action saga\n        dispatch({\n            type:GET_TASKLIST_API,\n           \n        })\n    }\n\n    const addTask = (e) => {\n        e.preventDefault();\n        dispatch({\n            type:ADD_TASK_API,\n            taskName: state.values.taskName\n        })\n    }\n\n    useEffect(() => {\n        //Gọi hàm getTaskList\n        getTaskList();\n\n        return () => {\n\n        }\n    }, [])\n\n    //Xử lý reject task\n    const rejectTask = (taskName)=>{\n        dispatch({\n            type:REJECT_TASK_API,\n            taskName\n        })\n\n    }\n\n    //Xử lý done task\n   const  checkTask = (taskName) => {\n      dispatch({\n          type:CHECK_TASK_API,\n          taskName\n      })\n    }\n\n\n    //Hàm xử lý xóa task\n    const delTask = (taskName) => {\n        console.log(taskName)\n        dispatch({\n            type:DELETE_TASK_API,\n            taskName:taskName\n        })\n    }\n\n\n    const renderTaskToDo = () => {\n        return taskList.filter(item => !item.status).map((item, index) => {\n            return <li key={index}>\n                <span>{item.taskName}</span>\n                <div className=\"buttons\">\n                    <button className=\"remove\" type=\"button\" onClick={() => {\n                        delTask(item.taskName)\n                    }}>\n                        <i className=\"fa fa-trash-alt\" />\n                    </button>\n                    <button type=\"button\" className=\"complete\" onClick={() => {\n                        checkTask(item.taskName)\n                    }}>\n                        <i className=\"far fa-check-circle\" />\n                        <i className=\"fas fa-check-circle\" />\n                    </button>\n                </div>\n            </li>\n        })\n    }\n\n\n    const renderTaskToDoDone = () => {\n        return taskList.filter(item => item.status).map((item, index) => {\n            return <li key={index}>\n                <span>{item.taskName}</span>\n                <div className=\"buttons\">\n                    <button className=\"remove\" type=\"button\" onClick={() => {\n                        delTask(item.taskName)\n                    }}>\n                        <i className=\"fa fa-trash-alt\" />\n                    </button>\n                    <button type=\"button\" className=\"complete\" onClick={() => {\n                        rejectTask(item.taskName)\n                    }}>\n                        <i className=\"far fa-undo\" />\n                        <i className=\"fas fa-undo\" />\n                    </button>\n                </div>\n            </li>\n        })\n    }\n\n\n    return (\n        <div className=\"card\">\n            <button className=\"btn btn-success\" onClick={()=>{\n                dispatch({\n                    type:'getTaskApiAction'\n                })\n            }}>Dispatch action saga getTaskAPI</button>\n            <div className=\"card__header\">\n                <img src={require('./bg.png')} />\n            </div>\n            {/* <h2>hello!</h2> */}\n            <form className=\"card__body\" onSubmit={addTask}>\n                <div className=\"card__content\">\n                    <div className=\"card__title\">\n                        <h2>My Tasks</h2>\n                        <p>September 9,2020</p>\n                    </div>\n                    <div className=\"card__add\">\n                        <input id=\"newTask\" name=\"taskName\" type=\"text\" placeholder=\"Enter an activity...\" onChange={handleChange} />\n                        <button id=\"addItem\" type=\"submit\" onClick={addTask}>\n                            <i className=\"fa fa-plus\" />\n                        </button>\n                    </div>\n                    <div className=\"card__todo\">\n                        {/* Uncompleted tasks */}\n                        <ul className=\"todo\" id=\"todo\">\n                            {renderTaskToDo()}\n                        </ul>\n                        {/* Completed tasks */}\n                        <ul className=\"todo\" id=\"completed\">\n                            {renderTaskToDoDone()}\n                        </ul>\n                    </div>\n                </div>\n            </form>\n        </div>\n\n    )\n}\n","//-----------action----------\nexport const GET_TASK_API = 'GET_TASK_API';\n\n//---------------saga--------------\n\nexport const GET_TASKLIST_API = 'GET_TASKLIST_API';\nexport const ADD_TASK_API = 'ADD_TASK_API';\nexport const CHECK_TASK_API = 'CHECK_TASK_API';\nexport const DELETE_TASK_API = 'DELETE_TASK_API';\nexport const REJECT_TASK_API = 'REJECT_TASK_API';\n\n\n\n","import React from 'react'\n\nexport default function Contact() {\n    return (\n        <div>\n            liên hệ\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Detail(props) {\n\n    return (\n        <div>\n            Giá trị tham số: {props.match.params.id}\n            <br />\n            Path name hiện tại: {props.match.path}\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Home(props) {\n    console.log(props)\n    return (\n        <div>\n            trang chủ\n        </div>\n    )\n}\n\n\n\n","import React, { useState } from 'react'\nimport { Prompt } from 'react-router-dom';\n\n\n\n\nexport default function Login(props) {\n\n    const [userLogin,setUserLogin] = useState({userName:'',passWord:'',status:false})\n\n\n    console.log(userLogin)\n    const handleChange = (event) => {\n        const {name,value} = event.target;\n\n        const newUserLogin = {\n            ...userLogin,\n            [name]:value\n        };\n\n\n        let valid = true;\n        for(let key in newUserLogin) {\n            if(key !== 'status') {\n                if(newUserLogin[key].trim()===''){\n                    valid = false;\n                }\n            }\n        }\n\n        if(!valid) {\n            newUserLogin.status = true;\n        }else {\n            newUserLogin.status = false;\n        }\n\n        setUserLogin(newUserLogin);\n    }\n\n    const handleLogin = (event) => {\n        event.preventDefault();\n        if(userLogin.userName === 'cyberlearn' && userLogin.passWord==='cyberlearn') {\n            //Thành công thì chuyển về trang trước đó\n            // props.history.goBack();\n            //Chuyển đến trang chỉ định sau khi xử lý\n            // Chuyển hướng đến path tương ứng\n            //  props.history.push('/home');\n            //replace thay đổi nội dung path tương ứng\n            // props.history.replace('/home');\n            props.history.goBack();\n            localStorage.setItem('userLogin',JSON.stringify(userLogin))\n\n        }else {\n            alert('Login fail !')\n            return;\n        }\n    }\n\n    return (\n        <form className=\"container\" onSubmit={handleLogin}>\n            <h3 className=\"display-4\">Login</h3>\n            <div className=\"form-group\">\n                <p>User Name</p>\n                <input name=\"userName\" className=\"form-control\" onChange={handleChange}/>\n            </div>\n            <div className=\"form-group\">\n                <p>Password</p>\n                <input name=\"passWord\" className=\"form-control\" onChange={handleChange}/>\n            </div>\n            <div className=\"form-group\">\n               <button className=\"btn btn-success\">Đăng nhập</button>\n            </div>\n            <Prompt when={userLogin.status} message={(location) => {\n                return 'Bạn có chắc muốn rời khỏi trang này !'\n            }} />\n        </form>\n    )\n}\n","import React from 'react'\n\nexport default function PageNotFound(props) {\n    return (\n        <div>\n            Không tìm thấy trang {props.match.url}\n        </div>\n    )\n}\n","import React from 'react'\nimport { Redirect } from 'react-router-dom';\n\nexport default function Profile(props) {\n\n\n    if (localStorage.getItem('userLogin')) {\n        return (\n            <div>\n                profile\n            </div>\n        )\n    }else {\n        alert('Vui lòng đăng nhập để vào trang này !');\n        return <Redirect to=\"/login\" />\n    }\n}\n","import React, { Component } from 'react'\nimport Axios from 'axios'\nimport style from './Todolist.css'\n\nexport default class Todolist extends Component {\n\n    state = {\n        taskList: [],\n        values: {\n            taskName: ''\n        },\n        errors: {\n            taskName: ''\n        }\n    }\n\n    getTaskList = () => {\n        let promise = Axios({\n            url: 'http://svcy.myclass.vn/api/ToDoList/GetAllTask',\n            method: 'GET'\n        });\n\n        promise.then((result) => {\n            console.log(result.data);\n            //Nếu gọi api lấy về kết quả thành công \n            //=> set lại state của component\n            this.setState({\n                taskList: result.data\n            })\n\n            console.log('thành công')\n        });\n\n\n        promise.catch((err) => {\n            console.log('thất bại')\n\n            console.log(err.response.data)\n        });\n    }\n\n    renderTaskToDo = () => {\n        return this.state.taskList.filter(item => !item.status).map((item, index) => {\n            return <li key={index}>\n                <span>{item.taskName}</span>\n                <div className=\"buttons\">\n                    <button className=\"remove\" type=\"button\" onClick={() => {\n                        this.delTask(item.taskName)\n                    }}>\n                        <i className=\"fa fa-trash-alt\" />\n                    </button>\n                    <button type=\"button\" className=\"complete\" onClick={()=>{\n                        this.checkTask(item.taskName)\n                    }}>\n                        <i className=\"far fa-check-circle\" />\n                        <i className=\"fas fa-check-circle\" />\n                    </button>\n                </div>\n            </li>\n        })\n    }\n\n    \n    renderTaskToDoDone = () => {\n        return this.state.taskList.filter(item => item.status).map((item, index) => {\n            return <li key={index}>\n                <span>{item.taskName}</span>\n                <div className=\"buttons\">\n                    <button className=\"remove\" type=\"button\" onClick={() => {\n                        this.delTask(item.taskName)\n                    }}>\n                        <i className=\"fa fa-trash-alt\" />\n                    </button>\n                    <button  type=\"button\" className=\"complete\" onClick={()=>{\n                        this.rejectTask(item.taskName)\n                    }}>\n                        <i className=\"far fa-undo\" />\n                        <i className=\"fas fa-undo\" />\n                    </button>\n                </div>\n            </li>\n        })\n    }\n\n    //Xử lý reject task\n    rejectTask = (taskName)=>{\n        let promise = Axios({\n            url:`http://svcy.myclass.vn/api/ToDoList/rejectTask?taskName=${taskName}`,\n            method:'PUT'\n        });\n        \n        promise.then(res=>{\n            alert(res.data);\n            this.getTaskList();\n        });\n\n        promise.catch(err=>{\n            alert(err.response.data);\n        })\n\n    }\n\n    //Xử lý done task\n    checkTask = (taskName) => {\n        let promise = Axios({\n            url:`http://svcy.myclass.vn/api/ToDoList/doneTask?taskName=${taskName}`,\n            method:'PUT'\n        });\n\n        promise.then(res=>{\n            alert(res.data);\n            this.getTaskList();\n        });\n\n        promise.catch(err=>{\n            alert(err.response.data);\n        })\n    }\n\n\n    //Hàm xử lý xóa task\n    delTask = (taskName) => {\n        let promise = Axios({\n            url: `http://svcy.myclass.vn/api/ToDoList/deleteTask?taskName=${taskName}`,\n            method: 'DELETE'\n        });\n\n        promise.then(result => {\n            alert(result.data);\n            this.getTaskList();\n        });\n\n        promise.catch(errors => {\n            alert(errors.response.data)\n        })\n    }\n\n\n    //Hàm sẽ tự động thực thi sau khi nội dung component được render\n    componentDidMount() {\n        this.getTaskList();\n    }\n\n\n    handleChange = (e) => {\n        let { value, name } = e.target;\n        console.log(value, name);\n        let newValues = { ...this.state.values };\n\n        newValues = { ...newValues, [name]: value };\n\n        let newErrors = { ...this.state.errors };\n\n        let regexString = /^[a-z A-Z]+$/;\n\n        if (!regexString.test(value) || value.trim() === '') {\n            newErrors[name] = name + ' invalid !';\n        } else {\n            newErrors[name] = '';\n        }\n\n\n        this.setState({\n            ...this.state,\n            values: newValues,\n            errors: newErrors\n        })\n    }\n\n    addTask = (e) => {\n        e.preventDefault(); //Dừng sự kiện submit form\n        console.log(this.state.values.taskName);\n\n        let promise = Axios({\n            url: 'http://svcy.myclass.vn/api/ToDoList/AddTask',\n            method: 'POST',\n            data: { taskName: this.state.values.taskName }\n        });\n\n        //Xử lý thành công\n        promise.then(result => {\n            // alert(result.data);\n            this.getTaskList();\n\n        })\n\n        //Xử lý thất bại\n        promise.catch(errors => {\n            alert(errors.response.data)\n\n        })\n\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.addTask}>\n                {/* <button onClick={() => { this.getTaskList() }}>Get task list</button> */}\n                <div className=\"card\">\n                    <div className=\"card__header\">\n                        <img src={require('./bg.png')} />\n                    </div>\n                    {/* <h2>hello!</h2> */}\n                    <div className=\"card__body\">\n                        <div className=\"card__content\">\n                            <div className=\"form-group\">\n                                <div className=\"card__title\">\n                                    <h2>My Tasks</h2>\n                                    <p>September 9,2020</p>\n                                </div>\n                                <div className=\"card__add\">\n                                    <input name=\"taskName\" onChange={this.handleChange} id=\"newTask\" type=\"text\" placeholder=\"Enter an activity...\" />\n\n                                    <button id=\"addItem\" onClick={this.addTask}>\n                                        <i className=\"fa fa-plus\" />\n                                    </button>\n                                </div>\n                                <span className=\"text text-danger\">{this.state.errors.taskName}</span>\n                            </div>\n\n                            <div className=\"card__todo form-group\">\n                                {/* Uncompleted tasks */}\n                                <ul className=\"todo\" id=\"todo\">\n                                    {this.renderTaskToDo()}\n                                </ul>\n                                {/* Completed tasks */}\n                                <ul className=\"todo\" id=\"completed\">\n                                    {this.renderTaskToDoDone()}\n\n                                    {/* <li>\n                                    <span>Ăn sáng</span>\n                                    <div className=\"buttons\">\n                                        <button className=\"remove\">\n                                            <i className=\"fa fa-trash-alt\" />\n                                        </button>\n                                        <button className=\"complete\">\n                                            <i className=\"far fa-check-circle\" />\n                                            <i className=\"fas fa-check-circle\" />\n                                        </button>\n                                    </div>\n                                </li> */}\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        )\n    }\n}\n","import Axios from \"axios\";\nimport Profile from \"../../pages/Profile/Profile\";\nimport { GET_TASK_API } from \"../constants/ToDoListConst\";\n\n\n//Action có 2 loại\n//Action thực thi ngay làm thay đổi reducer (action 1)\n//Action phải thực hiện xử lý rồi mới gọi action 1 thực thi (async action)\n\nexport const getTaskListApi = () => {\n\n    //Tiền xử lý dữ liệu => xử lý function \n    return async dispatch => {\n\n        try {\n            let { data, status, ...res } = await Axios({\n                url: 'http://svcy.myclass.vn/api/ToDoList/GetAllTask',\n                method: 'GET'\n            });\n            if (status === 200) {\n                dispatch({\n                    type: GET_TASK_API,\n                    taskList: data\n                })\n            }\n        } catch (err) {\n            console.log(err.response.data)\n        }\n\n        // console.log('promise',res.data)\n        // promise.then((result) => {\n        //     console.log(result.data);\n        //     //Nếu gọi api lấy về kết quả thành công \n        //     //=> set lại state của component\n        //     dispatch({\n        //         type: GET_TASK_API,\n        //         taskList: result.data\n        //     })\n\n        //     console.log('thành công')\n        // });\n\n\n        // promise.catch((err) => {\n        //     console.log('thất bại')\n        //     console.log(err.response.data)\n        // });\n    }\n}\n\n\n\nexport const addTaskApi = (taskName) => {\n    return async dispatch => {\n\n        try {\n            //Xử lý trước khi dispatch\n            let {status,data} = await Axios({\n                url: 'http://svcy.myclass.vn/api/ToDoList/AddTask',\n                method: 'POST',\n                data: { taskName: taskName }\n            });\n            // console.log('res',res)\n            if (status === 200) {\n                dispatch(getTaskListApi())\n            }\n        }catch(err){\n            console.log(err.response.data);\n        }\n        // //Xử lý thành công\n        // promise.then(result => {\n        //     // alert(result.data);\n        //     dispatch(getTaskListApi());\n\n        // })\n\n        // //Xử lý thất bại\n        // promise.catch(errors => {\n        //     alert(errors.response.data)\n\n        // })\n\n\n    }\n}\n\n\nexport const deleteTaskApi = (taskName) => {\n    return dispatch => {\n        let promise = Axios({\n            url: `http://svcy.myclass.vn/api/ToDoList/deleteTask?taskName=${taskName}`,\n            method: 'DELETE'\n        });\n\n        promise.then(result => {\n            //Sau khi thực hiện api gọi phương thức dispatchAction get TaskListApi để load lại task\n            dispatch(getTaskListApi())\n        });\n\n        promise.catch(errors => {\n            alert(errors.response.data)\n        })\n    }\n}\n\nexport const checkTaskApi = (taskName) => {\n    return dispatch => {\n        let promise = Axios({\n            url: `http://svcy.myclass.vn/api/ToDoList/doneTask?taskName=${taskName}`,\n            method: 'PUT'\n        });\n\n        promise.then(res => {\n            dispatch(getTaskListApi())\n        });\n\n        promise.catch(err => {\n            alert(err.response.data);\n        })\n    }\n}\n\n\nexport const rejectTaskApi = (taskName) => {\n    return dispatch => {\n        let promise = Axios({\n            url: `http://svcy.myclass.vn/api/ToDoList/rejectTask?taskName=${taskName}`,\n            method: 'PUT'\n        });\n\n        promise.then(res => {\n            alert(res.data);\n            dispatch(getTaskListApi());\n        });\n\n        promise.catch(err => {\n            alert(err.response.data);\n        })\n    }\n}\n\n\n\n\n","import Axios from 'axios';\nimport React, { useEffect, useState } from 'react'\nimport {useSelector,useDispatch} from 'react-redux'\nimport { addTaskApi, deleteTaskApi, getTaskListApi,checkTaskApi, rejectTaskApi } from '../../redux/actions/ToDoListAction';\nimport { GET_TASK_API } from '../../redux/constants/ToDoListConst';\n\n\nexport default function ToDoListRedux(props) {\n    \n    //Lấy tasklist từ redux về\n    const {taskList} = useSelector(state => state.ToDoListReducer);\n    const dispatch = useDispatch();\n\n    let [state, setState] = useState({\n     \n        values: {\n            taskName: ''\n        },\n        errors: {\n            taskName: ''\n        }\n    });\n\n    const handleChange = (e) => {\n        let { value, name } = e.target;\n        let newValues = { ...state.values };\n\n        newValues = { ...newValues, [name]: value };\n\n        let newErrors = { ...state.errors };\n\n        let regexString = /^[a-z A-Z]+$/;\n\n        if (!regexString.test(value) || value.trim() === '') {\n            newErrors[name] = name + ' invalid !';\n        } else {\n            newErrors[name] = '';\n        }\n\n\n        setState({\n            ...state,\n            values: newValues,\n            errors: newErrors\n        })\n    }\n\n\n    const getTaskList = () => {\n       dispatch(getTaskListApi())\n    }\n\n    const addTask = (e) => {\n        e.preventDefault(); //Dừng sự kiện submit form\n        console.log(state.values.taskName);\n\n        //Xử lý nhận dữ liệu từ người dùng nhập => gọi action addTaskApi()\n        dispatch(addTaskApi(state.values.taskName))\n       \n    }\n\n    useEffect(() => {\n        getTaskList();\n\n\n        return () => {\n\n        }\n    }, [])\n\n    //Xử lý reject task\n    const rejectTask = (taskName)=>{\n        dispatch(rejectTaskApi(taskName));\n\n    }\n\n    //Xử lý done task\n   const checkTask = (taskName) => {\n        dispatch(checkTaskApi(taskName))\n    }\n\n\n    //Hàm xử lý xóa task\n    const delTask = (taskName) => {\n        dispatch(deleteTaskApi(taskName))\n    }\n\n\n    const renderTaskToDo = () => {\n        return taskList.filter(item => !item.status).map((item, index) => {\n            return <li key={index}>\n                <span>{item.taskName}</span>\n                <div className=\"buttons\">\n                    <button className=\"remove\" type=\"button\" onClick={() => {\n                        delTask(item.taskName)\n                    }}>\n                        <i className=\"fa fa-trash-alt\" />\n                    </button>\n                    <button type=\"button\" className=\"complete\" onClick={() => {\n                        checkTask(item.taskName)\n                    }}>\n                        <i className=\"far fa-check-circle\" />\n                        <i className=\"fas fa-check-circle\" />\n                    </button>\n                </div>\n            </li>\n        })\n    }\n\n\n    const renderTaskToDoDone = () => {\n        return taskList.filter(item => item.status).map((item, index) => {\n            return <li key={index}>\n                <span>{item.taskName}</span>\n                <div className=\"buttons\">\n                    <button className=\"remove\" type=\"button\" onClick={() => {\n                        delTask(item.taskName)\n                    }}>\n                        <i className=\"fa fa-trash-alt\" />\n                    </button>\n                    <button type=\"button\" className=\"complete\" onClick={() => {\n                        rejectTask(item.taskName)\n                    }}>\n                        <i className=\"far fa-undo\" />\n                        <i className=\"fas fa-undo\" />\n                    </button>\n                </div>\n            </li>\n        })\n    }\n\n\n    return (\n        <div className=\"card\">\n            <div className=\"card__header\">\n                <img src={require('./bg.png')} />\n            </div>\n            {/* <h2>hello!</h2> */}\n            <form className=\"card__body\" onSubmit={addTask}>\n                <div className=\"card__content\">\n                    <div className=\"card__title\">\n                        <h2>My Tasks</h2>\n                        <p>September 9,2020</p>\n                    </div>\n                    <div className=\"card__add\">\n                        <input id=\"newTask\" name=\"taskName\" type=\"text\" placeholder=\"Enter an activity...\" onChange={handleChange} />\n                        <button id=\"addItem\" type=\"submit\" onClick={addTask}>\n                            <i className=\"fa fa-plus\" />\n                        </button>\n                    </div>\n                    <div className=\"card__todo\">\n                        {/* Uncompleted tasks */}\n                        <ul className=\"todo\" id=\"todo\">\n                            {renderTaskToDo()}\n                        </ul>\n                        {/* Completed tasks */}\n                        <ul className=\"todo\" id=\"completed\">\n                            {renderTaskToDoDone()}\n                        </ul>\n                    </div>\n                </div>\n            </form>\n        </div>\n\n    )\n\n\n}\n","import Axios from 'axios';\nimport React, { useEffect, useState } from 'react'\n\nexport default function TodolistRFC(props) {\n\n    let [state, setState] = useState({\n        taskList: [],\n        values: {\n            taskName: ''\n        },\n        errors: {\n            taskName: ''\n        }\n    });\n\n    const handleChange = (e) => {\n        let { value, name } = e.target;\n        let newValues = { ...state.values };\n\n        newValues = { ...newValues, [name]: value };\n\n        let newErrors = { ...state.errors };\n\n        let regexString = /^[a-z A-Z]+$/;\n\n        if (!regexString.test(value) || value.trim() === '') {\n            newErrors[name] = name + ' invalid !';\n        } else {\n            newErrors[name] = '';\n        }\n\n\n        setState({\n            ...state,\n            values: newValues,\n            errors: newErrors\n        })\n    }\n\n\n    const getTaskList = () => {\n        let promise = Axios({\n            url: 'http://svcy.myclass.vn/api/ToDoList/GetAllTask',\n            method: 'GET'\n        });\n\n        promise.then((result) => {\n            console.log(result.data);\n            //Nếu gọi api lấy về kết quả thành công \n            //=> set lại state của component\n            setState({\n                ...state,\n                taskList: result.data\n            })\n\n            console.log('thành công')\n        });\n\n\n        promise.catch((err) => {\n            console.log('thất bại')\n\n            console.log(err.response.data)\n        });\n    }\n\n    const addTask = (e) => {\n        e.preventDefault(); //Dừng sự kiện submit form\n        console.log(state.values.taskName);\n\n        let promise = Axios({\n            url: 'http://svcy.myclass.vn/api/ToDoList/AddTask',\n            method: 'POST',\n            data: { taskName: state.values.taskName }\n        });\n\n        //Xử lý thành công\n        promise.then(result => {\n            // alert(result.data);\n            getTaskList();\n\n        })\n\n        //Xử lý thất bại\n        promise.catch(errors => {\n            alert(errors.response.data)\n\n        })\n    }\n\n    useEffect(() => {\n        getTaskList();\n\n\n        return () => {\n\n        }\n    }, [])\n\n    //Xử lý reject task\n    const rejectTask = (taskName)=>{\n        let promise = Axios({\n            url:`http://svcy.myclass.vn/api/ToDoList/rejectTask?taskName=${taskName}`,\n            method:'PUT'\n        });\n        \n        promise.then(res=>{\n            alert(res.data);\n            getTaskList();\n        });\n\n        promise.catch(err=>{\n            alert(err.response.data);\n        })\n\n    }\n\n    //Xử lý done task\n   const  checkTask = (taskName) => {\n        let promise = Axios({\n            url:`http://svcy.myclass.vn/api/ToDoList/doneTask?taskName=${taskName}`,\n            method:'PUT'\n        });\n\n        promise.then(res=>{\n            alert(res.data);\n            getTaskList();\n        });\n\n        promise.catch(err=>{\n            alert(err.response.data);\n        })\n    }\n\n\n    //Hàm xử lý xóa task\n    const delTask = (taskName) => {\n        let promise = Axios({\n            url: `http://svcy.myclass.vn/api/ToDoList/deleteTask?taskName=${taskName}`,\n            method: 'DELETE'\n        });\n\n        promise.then(result => {\n            alert(result.data);\n            getTaskList();\n        });\n\n        promise.catch(errors => {\n            alert(errors.response.data)\n        })\n    }\n\n\n    const renderTaskToDo = () => {\n        return state.taskList.filter(item => !item.status).map((item, index) => {\n            return <li key={index}>\n                <span>{item.taskName}</span>\n                <div className=\"buttons\">\n                    <button className=\"remove\" type=\"button\" onClick={() => {\n                        delTask(item.taskName)\n                    }}>\n                        <i className=\"fa fa-trash-alt\" />\n                    </button>\n                    <button type=\"button\" className=\"complete\" onClick={() => {\n                        checkTask(item.taskName)\n                    }}>\n                        <i className=\"far fa-check-circle\" />\n                        <i className=\"fas fa-check-circle\" />\n                    </button>\n                </div>\n            </li>\n        })\n    }\n\n\n    const renderTaskToDoDone = () => {\n        return state.taskList.filter(item => item.status).map((item, index) => {\n            return <li key={index}>\n                <span>{item.taskName}</span>\n                <div className=\"buttons\">\n                    <button className=\"remove\" type=\"button\" onClick={() => {\n                        delTask(item.taskName)\n                    }}>\n                        <i className=\"fa fa-trash-alt\" />\n                    </button>\n                    <button type=\"button\" className=\"complete\" onClick={() => {\n                        rejectTask(item.taskName)\n                    }}>\n                        <i className=\"far fa-undo\" />\n                        <i className=\"fas fa-undo\" />\n                    </button>\n                </div>\n            </li>\n        })\n    }\n\n\n    return (\n        <div className=\"card\">\n            <div className=\"card__header\">\n                <img src={require('./bg.png')} />\n            </div>\n            {/* <h2>hello!</h2> */}\n            <form className=\"card__body\" onSubmit={addTask}>\n                <div className=\"card__content\">\n                    <div className=\"card__title\">\n                        <h2>My Tasks</h2>\n                        <p>September 9,2020</p>\n                    </div>\n                    <div className=\"card__add\">\n                        <input id=\"newTask\" name=\"taskName\" type=\"text\" placeholder=\"Enter an activity...\" onChange={handleChange} />\n                        <button id=\"addItem\" type=\"submit\" onClick={addTask}>\n                            <i className=\"fa fa-plus\" />\n                        </button>\n                    </div>\n                    <div className=\"card__todo\">\n                        {/* Uncompleted tasks */}\n                        <ul className=\"todo\" id=\"todo\">\n                            {renderTaskToDo()}\n                        </ul>\n                        {/* Completed tasks */}\n                        <ul className=\"todo\" id=\"completed\">\n                            {renderTaskToDoDone()}\n                        </ul>\n                    </div>\n                </div>\n            </form>\n        </div>\n\n    )\n}\n","import React from 'react';\nimport { BrowserRouter, NavLink, Route, Switch } from 'react-router-dom';\nimport LoadingComponent from './components/GlobalSetting/LoadingComponent/LoadingComponent';\nimport Header from './components/Home/Header/Header';\nimport About from './pages/About/About';\nimport BaiTapToDoListSaga from './pages/BaiTapToDoListSaga/BaiTapToDoListSaga';\nimport Contact from './pages/Contact/Contact';\nimport Detail from './pages/Detail/Detail';\nimport Home from './pages/Home/Home';\nimport Login from './pages/Login/Login';\nimport PageNotFound from './pages/PageNotFound/PageNotFound';\nimport Profile from './pages/Profile/Profile';\nimport Todolist from './pages/Todolist/Todolist';\nimport ToDoListRedux from './pages/Todolist/ToDoListRedux';\nimport TodolistRFC from './pages/Todolist/TodolistRFC';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Header />\n      <LoadingComponent />\n      <Switch>\n        \n        <Route exact path='/home' component={Home} />\n        <Route exact path='/contact' component={Contact} />\n        <Route exact path='/about' component={About} />\n        <Route exact path='/login' component={Login} />\n        <Route exact path='/detail/:id' component={Detail} />\n        <Route exact path='/profile' component={Profile} />\n        <Route exact path='/todolistrfc' component={TodolistRFC} />\n        <Route exact path='/todolistrcc' component={Todolist} />\n        <Route exact path='/todolistredux' component={ToDoListRedux} />\n        <Route exact path='/todolistsaga' component={BaiTapToDoListSaga} />\n\n\n        <Route exact path='/' component={Home} />\n        <Route path=\"*\" component={PageNotFound}/>\n\n      </Switch>\n  \n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { GET_TASK_API } from \"../constants/ToDoListConst\"\n\n\nconst initialState = {\n    taskList:[]\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n\n    case GET_TASK_API:\n        state.taskList = action.taskList;\n        return { ...state }\n    default:\n        return state\n    }\n}\n","import { DISPLAY_LOADING, HIDE_LOADING } from \"../constants/LoadingConst\";\n\nconst initialState = {\n    isLoading:false\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n\n    case DISPLAY_LOADING:\n        state.isLoading = true;\n        return { ...state }\n    case HIDE_LOADING:{\n        state.isLoading=false;\n        return {...state}\n    }\n    default:\n        return state\n    }\n}\n","export const DOMAIN = 'http://svcy.myclass.vn/api';\n\n\n\nexport const STATUS_CODE = {\n    SUCCESS : 200,\n    NOT_FOUND: 404,\n    SERVER_ERROR:500\n}","import Axios from \"axios\";\nimport { DOMAIN } from \"../util/constants/settingSystem\"\n\nexport class ToDoListService {\n    constructor(){\n\n    }\n\n    getTaskApi = () => {\n        return Axios({\n            url: `${DOMAIN}/ToDoList/GetAllTask`,\n            method: 'GET'\n        })\n    }\n\n    addTaskApi = (taskName) => {\n        return Axios({\n            url: `${DOMAIN}/ToDoList/addTask`,\n            method: 'POST',\n            data: {\n                taskName:taskName\n            }\n        })\n    }\n\n    deleteTaskApi = (taskName) => {\n        return Axios({\n            url: `${DOMAIN}/ToDoList/deleteTask?taskName=${taskName}`,\n            method: 'DELETE',\n        })\n    }\n\n    checkDoneTask = (taskName) => {\n        return Axios({\n            url: `${DOMAIN}/ToDoList/doneTask?taskName=${taskName}`,\n            method: 'PUT',\n        })\n    }\n\n    rejectTask = (taskName) => {\n        return Axios({\n            url: `${DOMAIN}/ToDoList/rejectTask?taskName=${taskName}`,\n            method: 'PUT',\n        })\n    }\n\n}\n\nexport const toDoListService = new ToDoListService();\n\n","import Axios from 'axios'\nimport { call, delay, fork, take, takeEvery, takeLatest, put } from 'redux-saga/effects'\nimport { ADD_TASK_API, CHECK_TASK_API, DELETE_TASK_API, GET_TASKLIST_API, GET_TASK_API, REJECT_TASK_API } from '../constants/ToDoListConst';\nimport { toDoListService } from '../../services/ToDoListService'\nimport { STATUS_CODE } from '../../util/constants/settingSystem';\nimport { DISPLAY_LOADING, HIDE_LOADING } from '../constants/LoadingConst';\n/*redux 2 loại action: \n    Loại 1: action => object (action thường)\n    Loại 2: action => function (thường dùng để xử lý api hoặc gọi các action khác )\n*/\n\n/*\n    01/01/2020 Khải viết chức năng getTask\n    Action saga lấy danh sách task từ api \n*/\nfunction* getTaskApiAction(action) {\n    //put giống dispatch action\n    yield put({\n        type: DISPLAY_LOADING\n    })\n    try {\n        let { data, status } = yield call(toDoListService.getTaskApi)\n        yield delay(300);\n        if (status === STATUS_CODE.SUCCESS) {\n            //Sau khi lấy giá trị thành công dùng put (giống dispatch bên thunk) \n            yield put({\n                type: GET_TASK_API,\n                taskList: data\n            });\n        } else {\n            console.log('error')\n        }\n    }\n    catch (err) {\n        console.log('err')\n    }\n    yield put({\n        type: HIDE_LOADING\n    })\n\n}\n\nexport function* theoDoiActionGetTaskApi() {\n    yield takeLatest(GET_TASKLIST_API, getTaskApiAction)\n}\n\n/*\n    01/01/2020 Khải viết chức năng addTask\n    Action saga nghiệp vụ thêm task\n*/\n\nfunction* addTaskApiAction(action) {\n    const { taskName } = action;\n    //Gọi api\n    try {\n        const { data, status } = yield call(() => { return toDoListService.addTaskApi(taskName) });\n        if (status === STATUS_CODE.SUCCESS) {\n            yield put({\n                type: GET_TASKLIST_API\n            })\n        }\n\n    } catch (err) {\n        console.log(err);\n    }\n    //Hiển thị loading\n    //thành công thì load lại task = cách gọi lại action saga load tasklist\n}\n\nexport function* theoDoiActionAddTaskApi() {\n    yield takeLatest(ADD_TASK_API, addTaskApiAction)\n}\n\n/*\n    01/01/2020 Khải viết chức năng deleteTask\n    Action saga nghiệp vụ xóa task\n*/\n\nfunction* deleteTaskApi(action) {\n    console.log(action)\n    const { taskName } = action;\n    try {\n        //Gọi api deletetask\n        const { data, status } = yield call(() => {\n            return toDoListService.deleteTaskApi(taskName);\n        });\n\n        if (status === STATUS_CODE.SUCCESS) {\n            //Nếu thành công thì gọi lại action GET_TASKLIST_API(action saga thực thi)\n            yield put({\n                type: GET_TASKLIST_API,\n            })\n        }\n\n    } catch (err) {\n        console.log(err);\n    }\n}\n\n\n\nexport function* theoDoiActionDeleteTask() {\n    yield takeLatest(DELETE_TASK_API, deleteTaskApi)\n}\n\n\n\n/*\n    01/01/2020 Khải viết chức năng deleteTask\n    Action saga thực hiện nghiệp vụ done task\n*/\n\nfunction* checkDoneTaskApi(action) {\n    const { taskName } = action;\n\n    try {\n        const { data, status } = yield call(() => {\n            return toDoListService.checkDoneTask(taskName);\n        });\n        if (status === STATUS_CODE.SUCCESS) {\n            yield put({\n                type: GET_TASKLIST_API\n            })\n        }\n    } catch (error) {\n        console.log(error);\n    }\n\n}\n\n\n\nexport function* theoDoiDoneTask() {\n    yield takeLatest(CHECK_TASK_API, checkDoneTaskApi)\n}\n\n\n\n/*\n    01/01/2020 Khải viết chức năng deleteTask\n    Action saga thực hiện nghiệp vụ reject task\n*/\nexport function* rejectTaskApi(action) {\n    const { taskName } = action;\n\n    try{\n        const {data,status} = yield call (()=>{\n            return toDoListService.rejectTask(taskName);\n        })\n        \n        if(status === STATUS_CODE.SUCCESS) {\n            yield put ({\n                type:GET_TASKLIST_API\n            })\n        }\n    }catch(err) {\n        console.log(err)\n    }\n\n\n}\n\n\nexport function* theoDoiRejectTask() {\n    yield takeLatest(REJECT_TASK_API, rejectTaskApi)\n}\n\n","export const DISPLAY_LOADING = 'DISPLAY_LOADING';\nexport const HIDE_LOADING = 'HIDE_LOADING';","import { all } from \"redux-saga/effects\";\nimport Todolist from \"../../pages/Todolist/Todolist\";\nimport TodolistRFC from \"../../pages/Todolist/TodolistRFC\";\nimport * as ToDoListSaga from './ToDoListSaga'\n// import {theoDoiActionGetTaskApi} from './ToDoListSaga'\n\n\nexport function* rootSaga() {\n\n  yield all([\n    //Nghiệp vụ theo dõi các action saga todolist\n    ToDoListSaga.theoDoiActionGetTaskApi(),\n    ToDoListSaga.theoDoiActionAddTaskApi(),\n    ToDoListSaga.theoDoiActionDeleteTask(),\n    ToDoListSaga.theoDoiDoneTask(),\n    ToDoListSaga.theoDoiRejectTask()\n    //Nghiệp ...\n\n  ])\n\n\n}","import {applyMiddleware, combineReducers, createStore} from 'redux';\nimport ToDoListReducer from './reducers/ToDoListReducer'\nimport LoadingReducer from './reducers/LoadingReducer';\n\nimport reduxThunk from 'redux-thunk'\n\n\n//middleware saga\nimport createMiddleWareSaga from 'redux-saga';\nimport { rootSaga } from './sagas/rootSaga';\nconst middleWareSaga = createMiddleWareSaga();\n\n\nconst rootReducer = combineReducers({\n    //reducer khai báo tại đây\n    ToDoListReducer,\n    LoadingReducer\n})\n\nconst store = createStore(rootReducer,applyMiddleware(reduxThunk,middleWareSaga));\n\n//Gọi saga\nmiddleWareSaga.run(rootSaga);\n\n\nexport default store;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n//setup redux\nimport store from './redux/configStore'\nimport { Provider } from 'react-redux';\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  ,\n\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}